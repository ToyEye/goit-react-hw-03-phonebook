{"version":3,"sources":["Components/Container/Container.styled.js","Components/Button/Button.styled.js","Components/FormComponents/FormComponents.styled.js","Components/Form/Form.styled.js","Components/Section/Section.styled.js","Components/ContactList/ContactList.styled.js","Components/Filter/Filter.js","App.js","index.js"],"names":["Container","styled","div","Button","button","ImputEnter","input","InputType","label","InputText","p","FormStyled","form","Form","state","name","number","handleChange","evt","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","pattern","title","placeholder","required","onChange","Component","Section","section","Title","h1","ContactStyledList","ul","ContactItem","li","ContactName","ContactList","contacts","onDeleteItem","map","id","onClick","prototype","PropTypes","func","objectOf","shape","string","Filter","App","filter","addContact","contact","includes","newContact","nanoid","toast","success","error","deleteItem","itemId","prevState","filterEnter","filterChange","normalizeFilter","toLocaleLowerCase","toastOptions","duration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c211ecc5.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 1120px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport { Container };\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  padding: 5px 15px;\n  width: 110px;\n  margin-right: auto;\n  margin-left: auto;\n  border: none;\n  border-radius: 5px;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst ImputEnter = styled.input`\n  width: 220px;\n  padding: 5px 15px;\n  border-radius: 5px;\n  border-color: #d4d4d4;\n\n  &:hover,\n  &:active {\n    border-color: #7cb1ec;\n  }\n`;\nconst InputType = styled.label`\n  margin-bottom: 10px;\n  &:hover,\n  &:active {\n    border-color: #7cb1ec;\n  }\n`;\n\nconst InputText = styled.p`\n  margin-bottom: 5px;\n`;\n\nexport { ImputEnter, InputType, InputText };\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport { ImputEnter, InputType, InputText } from '../FormComponents';\n\nconst FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  width: 450px;\n  padding: 10px 15px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nclass Form extends Component {\n  static propTypes = {\n    state: PropTypes.objectOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        number: PropTypes.number,\n      })\n    ),\n    handleChange: PropTypes.func,\n    handleSubmit: PropTypes.func,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = evt => {\n    const { name, value } = evt.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <FormStyled onSubmit={this.handleSubmit}>\n        <InputType>\n          {' '}\n          <InputText>Name</InputText>\n          <ImputEnter\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Enter your name\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </InputType>\n        <InputType>\n          {' '}\n          <InputText>Name</InputText>\n          <ImputEnter\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter your number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </InputType>\n        <Button type=\"submit\">Add contact</Button>\n      </FormStyled>\n    );\n  }\n}\n\nexport default Form;\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  margin-top: 25px;\n  margin-bottom: 25px;\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  font-weigth: 400;\n  font-size: 20px;\n  margin-bottom: 25px;\n  text-align: center;\n`;\n\nexport { Section, Title };\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button';\nimport PropTypes from 'prop-types';\n\nconst ContactStyledList = styled.ul`\n  width: 450px;\n  padding: 15px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\nconst ContactItem = styled.li`\n  color: black;\n  &:not(:last-child) {\n    margin-bottom: 25px;\n  }\n`;\n\nconst ContactName = styled.p`\n  color: black;\n  margin-bottom: 15px;\n`;\n\nconst ContactList = ({ contacts, onDeleteItem }) => (\n  <ContactStyledList>\n    {contacts.map(({ name, id, number }) => (\n      <ContactItem key={id} id={id}>\n        <ContactName>\n          {name} : {number}\n        </ContactName>\n        <Button onClick={() => onDeleteItem(id)} type=\"button\">\n          Delete\n        </Button>\n      </ContactItem>\n    ))}\n  </ContactStyledList>\n);\n\nContactList.prototype = {\n  onDeleteItem: PropTypes.func,\n  contacts: PropTypes.objectOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.number,\n      id: PropTypes.string,\n    })\n  ),\n};\n\nexport default ContactList;\n","import React  from 'react'\nimport { ImputEnter, InputType, InputText } from \"../FormComponents\";\nimport PropTypes from 'prop-types';\n\n\nconst Filter = ({onChange}) => {\n    return (   \n        <InputType onChange={onChange}>\n            <InputText>Find contact by name</InputText>\n            <ImputEnter />\n        </InputType>\n   )\n};\n\nFilter.prototype = {\n    onChange: PropTypes.func,\n}\n\nexport default Filter;","import './App.css';\nimport React, {Component} from 'react';\nimport {Container} from \"./Components/Container\";\nimport Form from \"./Components/Form\";\nimport { Section, Title } from \"./Components/Section\";\nimport ContactList from \"./Components/ContactList\";\nimport { nanoid } from 'nanoid';\nimport Filter from \"./Components/Filter\";\nimport PropTypes from 'prop-types';\nimport toast, { Toaster } from 'react-hot-toast';\n\n\n\nclass App extends Component {\n\n  static propTypes = {\n    state: PropTypes.objectOf(PropTypes.shape({\n      contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.number\n      })),\n      filter: PropTypes.string,\n    })),\n    addContact: PropTypes.func,\n    deleteItem: PropTypes.func,\n    filterEnter: PropTypes.func,\n    filterChange: PropTypes.func\n  }\n  \n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n\n\n  addContact = ({ name, number }) => {\n    let array = [];\n    array = this.state.contacts.map(contact=>contact.name)\n\n    if (!array.includes(name)) {\n     const newContact = {\n        id: nanoid(),\n        name: name,\n        number: number\n      };\n      toast.success(\"Контакт добавлен\")\n     return  this.setState(({ contacts }) => ({\n        contacts: [newContact, ...contacts],\n      }));\n    } else {\n      toast.error(\"Контакт существует!\");\n      return;\n    }\n  };\n\n\n  deleteItem = itemId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== itemId),\n    }));\n  }\n\n  filterEnter = (evt) => {\n    this.setState({ filter: evt.target.value });\n  }\n\n  filterChange = () => {\n   const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter(contact => contact.name.toLocaleLowerCase()\n      .includes(normalizeFilter));\n  }\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <Container>\n        <Toaster\n          toastOptions={{\n            error: {\n              duration: 2000,\n            }\n          }} />\n        <Section>\n          <Title>Phonebook</Title>\n          <Form onSubmit={this.addContact }/>\n        </Section>\n        <Section>\n          <Title>Contacts</Title>\n          <Filter value={filter} onChange={this.filterEnter}/>\n          <ContactList\n            contacts={this.filterChange()}\n            onDeleteItem={this.deleteItem} \n          />\n        </Section>\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}